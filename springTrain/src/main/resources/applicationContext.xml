<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
">
    <!--直接通过无参构造实例化bean，给bean起别名，起多个别名，以及定义初始化和销毁方法-->
    <!--<bean id="bookDaoReality" name="firstDao secondDao" class="dao.BookDaoImpl" init-method="init" destroy-method="destroy"/>-->

    <!--直接通过无参构造实例化bean，给bean起别名，起多个别名   -->
    <!--<bean id="bookDaoReality" name="firstDao secondDao" class="dao.BookDaoImpl"/>-->

    <!--    <bean id="book00Dao" name="bookDa0o" class="dao.BookDaoImpl"/>-->
    <!--调用bean-->
    <!--    <bean id="bookServiceReality" name="service" class="service.BookServiceImpl" autowire="byType"/>-->
    <!--通过静态工厂实例化bean-->
    <!--<bean id="bookDaoFactory" class="dao.BookDaoFactory" factory-method="getBookDao"/>-->

    <!--通过实例工厂实例化bean-->
    <!--<bean id="bookDaoFactory" class="dao.BookDaoFactory"/>-->
    <!--<bean id="bookDaoUser" factory-method="getBookDao" factory-bean="bookDaoFactory"/>-->

    <!--使用FactoryBean实例化bean-->
    <!--<bean id="bookDaoFactoryBean" class="dao.BookDaoFactoryBean"/>-->

    <!--    <bean id="bookDao" class="testGather.BookGather">-->
    <!--        &lt;!&ndash;数组注入&ndash;&gt;-->
    <!--        <property name="array">-->
    <!--            <array>-->
    <!--                <value>100</value>-->
    <!--                <value>200</value>-->
    <!--                <value>300</value>-->
    <!--            </array>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;list集合注入&ndash;&gt;-->
    <!--        <property name="list">-->
    <!--            <list>-->
    <!--                <value>first</value>-->
    <!--                <value>second</value>-->
    <!--                <value>third</value>-->
    <!--                <value>fourth</value>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;set集合注入&ndash;&gt;-->
    <!--        <property name="set">-->
    <!--            <set>-->
    <!--                <value>first</value>-->
    <!--                <value>second</value>-->
    <!--                <value>third</value>-->
    <!--                <value>fourth</value>-->
    <!--            </set>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;map集合注入&ndash;&gt;-->
    <!--        <property name="map">-->
    <!--            <map>-->
    <!--                <entry key="country" value="china"/>-->
    <!--                <entry key="province" value="henan"/>-->
    <!--                <entry key="city" value="kaifeng"/>-->
    <!--            </map>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;Properties注入&ndash;&gt;-->
    <!--        <property name="properties">-->
    <!--            <props>-->
    <!--                <prop key="country">china</prop>-->
    <!--                <prop key="province">henan</prop>-->
    <!--                <prop key="city">kaifeng</prop>-->
    <!--            </props>-->
    <!--        </property>-->
    <!--    </bean>-->
    <!--    3.使用属性占位符${}读取properties文件中的属性-->
    <!--    说明：idea自动识别${}加载的属性值，需要手工点击才可以查阅原始书写格式-->
    <!--classpath*:*.properties  ：  设置加载当前工程类路径和当前工程所依赖的所有jar包中的所有properties文件-->
    <context:property-placeholder location="classpath*:*.properties" />
    <bean class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="bookDao" class="dao.BookDaoImpl">
        <property name="bookName" value="${jdbc.driver}"/>
    </bean>
</beans>